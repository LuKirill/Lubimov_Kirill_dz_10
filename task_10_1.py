# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
# __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде
# прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# 31 22
# 37 43
# 51 86
# 3 5 32
# 2 4 6
# -1 64 -8
# 3 5 8 3
# 8 3 7 1
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном
# виде.
# Далее реализовать перегрузку метода __add__() для сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно. Первый элемент первой
# строки первой матрицы складываем с первым элементом первой строки второй матрицы и пр.

##########################################################################################

class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        mat = ''
        for i in range(len(self.matrix)):
            mat = mat + '\n' + '\t'.join(map(str, self.matrix[i]))
        return mat

    def __add__(self, other):
        matrix_sum = [
            [cell_1 + cell_2 for cell_1, cell_2 in zip(row_1, row_2)]
            for row_1, row_2 in zip(self.matrix, other.matrix)
            ]
        return Matrix(matrix_sum)

l1 = [[31, 22], [37, 43], [51, 86]]
l2 = [[3, 5, 32], [2, 4, 6], [-1, 64, -8]]
l3 = [[3, 5, 8, 3], [8, 3, 7, 1]]

first = Matrix(l1)
second = Matrix(l2)
third = Matrix(l3)

print(f'1st matrix:{first}'"\n")
print(f'2nd matrix:{second}'"\n")
print(f'3rd matrix:{third}'"\n")

matrix_sum = f'{first + second}'"\n"

print(f'sum_matrix:{matrix_sum}')